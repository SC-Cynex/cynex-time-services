// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum RoleNames {
  EMPLOYEE
  MANAGER
  ADMIN
}

model User {
  id           Int         @id @default(autoincrement())
  addressId    Int?
  teamId       Int?
  hourId       Int?
  departmentId Int?
  roleId       Int?
  name         String
  email        String      @unique
  password     String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  address      Address?    @relation(fields: [addressId], references: [id])
  team         Team?       @relation(fields: [teamId], references: [id])
  hour         Hour?       @relation(fields: [hourId], references: [id])
  Role         Role?       @relation(fields: [roleId], references: [id])
  PointEv      PointEv[]
  Department   Department? @relation(fields: [departmentId], references: [id])
}

model Team {
  id        Int      @id @default(autoincrement())
  leaderId  Int?
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Role {
  id          Int       @id @default(autoincrement())
  name        String
  accessLevel RoleNames
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  users       User[]
}

model Department {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Address {
  id      Int    @id @default(autoincrement())
  street  String
  city    String
  state   String
  zipCode String
  neighborhood String
  number String
  users   User[]
}

model PointEv {
  id        Int      @id @default(autoincrement())
  hour      String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Hour {
  id        Int    @id @default(autoincrement())
  start     String
  end       String
  lunchTime String
  User      User[]
}
